import pandas as pd
import numpy as np
from sklearn import tree 

dataSource = 'C:/Users/Owner/Desktop/Python (by Jupyter)/csv/mushrooms.xlsx'
df = pd.read_excel(dataSource).head()

dic = {'y':1, 'n':0}
df['cap-shape'] = df['cap-shape'].map(dic)
df['cap-surface'] = df['cap-surface'].map(dic)
df['cap-color'] = df['cap-color'].map(dic)
df['bruises'] = df['bruises'].map(dic)
df['odor'] = df['odor'].map(dic)
dic2 = {'p': 1, 'e':2}
df['class'] = df['class'].map(dic2) 

feature = list(df.columns[:5])

# y vector
y = df['odor']
x = df[feature]
clf = tree.DecisionTreeClassifier().fit(x, y)



from IPython.display import Image
from io import StringIO
import pydot
from pyparsing import ParseException
import pydotplus

dot = StringIO()
tree.export_graphviz(clf, out_file=dot, feature_names=feature)

graph = pydotplus.graph_from_dot_data(dot.getvalue())
Image(graph.create_png())





from sklearn.ensemble import RandomForestClassifier
clf = RandomForestClassifier(n_estimators=10).fit(x,y)
print(clf.predict([[2, 1, 1, 1, 0]]))





import graphviz
d= graphviz.Digraph()
d.edge('hellow', 'taro')
