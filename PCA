from sklearn.datasets import load_iris
from sklearn.decomposition import PCA
import pylab as pl
from itertools import cycle 

iris = load_iris()

numSamples, numFeatures = iris.data.shape
X = iris.data
pca = PCA(n_components=2, whiten=True).fit(X)
x_pca = pca.transform(X)


pca.components_


pca.explained_variance_ratio_
# 2D preserved

sum(pca.explained_variance_ratio_)
# We still preserved 97% of variance of the source data, although we've thrown away two of 4D.



colors = cycle('rgb')
target_ids = range(len(iris.target_names))
pl.figure()
for i, c, label in zip(target_ids, colors, iris.target_names):
    pl.scatter(x_pca[iris.target == i, 0], x_pca[iris.target == i, 1], c=c, label=label)
pl.legend()
pl.show()



x_pca[0,0]
